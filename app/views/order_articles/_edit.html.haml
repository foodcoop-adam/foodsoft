= simple_form_for [@order, @order_article], remote: true do |form|
  .modal-header
    = link_to t('ui.marks.close').html_safe, '#', class: 'close', data: {dismiss: 'modal'}
    %h3= t '.title'
  .modal-body
    - if params[:without_units]
      = hidden_field_tag :without_units, true
    - else
      .fold-line
        = form.input :units_to_order, hint: '', input_html: {class: 'input-nano'}
        -#= form.input :units_billed, label: 'invoice', input_html: {class: 'input-nano'}
        = form.input :units_received, input_html: {class: 'input-nano'},
                     label: t('activerecord.attributes.order_article.units_received_short')
        %p.help-block= t 'simple_form.hints.order_article.units_to_order'

      .foo{style: 'clear:both'}

    = simple_fields_for :article, @order_article.article do |f|
      = f.input :name

      - if @order_article.article.is_a?(StockArticle)
        %div.alert= t '.stock_alert'
      - else
        = simple_fields_for :article_price, @order_article.article_price do |fprice|
          = render partial: 'shared/article_fields_units', locals: {f_unit: f, f_uq: fprice}
          = render partial: 'shared/article_fields_price', locals: {f: fprice}

      = form.input :update_global_price, as: :boolean
      = f.input :order_number
  .modal-footer
    = link_to t('ui.close'), '#', class: 'btn', data: {dismiss: 'modal'}
    = form.submit class: 'btn btn-primary'
