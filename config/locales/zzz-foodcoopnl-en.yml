en:
  activerecord:
    attributes:
      order:
        pickup: Pickup at
        price_markup_key: Foodcoop margin
  admin:
    configs:
      tab_layout:
        dashboard_title: Dashboard
    users:
      index:
        new_user_invite: Send invitations
  articles:
    upload:
      body_convert: "<p>The file is a spreadsheet (ending with <tt>.xls</tt>, <tt>.xlsx</tt>, <tt>.ods</tt>, <tt>.sxc</tt> or <tt>.csv</tt>). The first line contains columns headers.</p><p>Order of the columns:</p>"
  config:
    hints:
      home_notice: Show message on top of the dashboard frontpage (html allowed).
      order_schedule:
        ends:
          recurr: Schedule for order closing date.
          time: Default time when orders are closed.
        initial: Schedule starts at this date.
        pickup:
          recurr: Schedule for pickup day date.
          time: Default time when pickup starts.
      skip_order_finished_mails: Do not send members an email with the order results when an order closes (regardless of their own preference).
      sub_name: Sub-title shown below the foodcoop name (optional).
      use_paymanual: Allow entering ordergroup payments manually.
    keys:
      home_notice: Dashboard notice
      order_schedule:
        ends:
          recurr: Order end schedule
          time: time
        initial: Start date
        pickup:
          recurr: Pickup schedule
          time: time
      skip_order_finished_mails: Skip member mails when closing an order
      sub_name: Subtitle
      use_paymanual: Allow manual payments
  documents:
    order_by_articles:
      made_by: made by %{manufacturer}
      origin_in: from %{origin}
    order_by_groups:
      multiple:
        filename: Multiple orders - by group
        title: Multiple orders sorted by group
    order_fax:
      date: created at %{date}
      filename: Order from %{foodcoop} to %{supplier} at %{date}
      price: Price/unit
      subtotal: Subtotal
      total_gross: Total (gross)
      total_net: Total (net)
  errors:
    default:
      go_back: Go back
      title: Whoops
  finance:
    balancing:
      orders:
        invoice_new: enter invoice
        invoice_show: show invoice
    financial_transactions:
      account_info:
        available_funds: Available funds
        balance: Balance of account
        finished_orders: Value of finished orders
        last_updated_at: "(balance updated %{when} ago)"
        open_orders: Value of open orders
      create_collection:
        paymanual_disabled: Manual payments are disabled.
      new:
        type: Type
        type_cash: cash delivery day
        type_other: other (add note)
        type_pin: PIN delivery day
    ordergroups:
      ordergroups:
        available_funds: Available funds
  group_orders:
    archive:
      title: Previous orders of %{group}
      title_open: closed
    form:
      units_all: All members
      units_all_short: All
    min_quantity_notice:
      status_enough_affected: After saving your order, the order will be large enough for delivery. Thank you!
      status_enough_others: The order is large enough to be delivered.
      status_needed: Still %{amount} needs to be ordered so that delivery is possible.
      status_needed_approx: About %{amount} still needs to be ordered so that delivery is possible.
      title_note: This supplier has a minimum order quantity of %{amount}.
    show:
      articles:
        no_articles: You have no articles in this order.
      continue: Continue
    switch_order:
      open_remaining: "%{remaining} remaining"
      when_closed: settled since %{date}
      when_finished: closed since %{date}
  helpers:
    orders:
      order_checks:
        min_quantity_check: "%{link} that you've reached the minimum order quantity: %{text}"
        min_quantity_check_link: Please check
        min_quantity_not_reached: You have not reached the minimum order quantity of %{min_quantity} with a total of %{sum}.
        min_quantity_reached: You've reached the minimum order quantity of %{min_quantity} with a total of %{sum}.
        none_ordered: There are no articles to be ordered.
  home:
    index:
      to_archive: View your %{archive_link}.
      to_archive_link: previous orders
  invites:
    form:
      body_into_group: Here you can invite someone to join %{foodcoop} as a member of your %{type} <b>%{group}</b>.
      body_new_group: Here you can invite someone to become a new member of %{foodcoop}.
      email_multiple_hint: You can enter multiple email addresses, separated by commas or whitespace.
    success:
      one: User was invited successfully.
      other: "%{count} users were invited successfully."
  layouts:
    header:
      ordergroup: Account statement
  login:
    accept_invitation:
      invited_into_group: You are invited to become a member of %{foodcoop} as part of <b>%{group}</b>.
      invited_into_group_members:
        one: This group currently consists of %{members}.
        other: This group currently consists of %{members}.
        zero: You would be the first member of this group.
      invited_new_group: You are invited to become a member of %{foodcoop}.
    accept_invitation_form:
      body: "<p>If you want to participate, please fill in this form.</p> <p>Naturally, your information will not be shared with third parties for any reason. You can decide how much of your personal information should be visible for everyone. 'All' means all Foodcoop-members. Please note that the administrators do have access to your information.</p>"
      submit: Create a Foodsoft account
  mailer:
    invite:
      text_into_group: |-
        Hi!

        %{user} <%{mail}> has invited you to join %{foodcoop} as part of the group "%{group}".
        To accept the invitation and to join the foodcoop please follow this link: %{link}
        This link works only once and expires on %{expires}.

        Greetings, %{foodcoop}!
      text_new_group: |
        Hi!

        %{user} <%{mail}> has invited you to join "%{foodcoop}".
        To accept the invitation please follow this link: %{link}
        This link works only once and expires on %{expires}.


        Greetings, your Foodsoft Team!
    order_result_supplier:
      footer: "\nKind regards,\n%{name}\n%{foodcoop} "
      line_delivered_before: 'Deliver before: %{when}'
      line_delivered_before_note: "(in case of doubt, please contact %{name})"
      line_delivery_contact: 'Contact person for delivery: %{name}, %{phone}'
      line_order_contact: 'Contact person for order: %{name}, %{phone}'
      subject: New order
      subject_with_date: New order for %{delivered_before}
      text: |
        Foodcoop %{foodcoop} would like to place an order.
        Please find a PDF and spreadsheet attached.
  navigation:
    admin:
      _title: Membership
      ordergroups: Ordergroups
      users: Users
    config:
      _title: Configuration
    distribute:
      _title: Distribute
      articles: Distribute
      ordergroups: Member orders
      receive: Receive
    finances:
      _title: Finances
      accounts: Payments
      balancing: Update accounts
      invoices: Invoices
    prepare:
      _title: Order
      orders: Order cycle
      suppliers: Assortment
  orders:
    finish:
      confirm_end: Do you really want to close the order? There is no going back.
      confirm_end_send: The order will be sent to the supplier.
      confirm_end_send_manual: To place the order, download the Fax in the following screen and send it to the supplier.
      confirm_end_send_not: The order will be closed. It will not be sent to the supplier.
      confirm_end_send_not_manual: The order will be closed. You do not need to send it to the supplier.
      contact_delivery: Delivery contact
      contact_order: Order contact
      delivered_before: Deliver before
      delivered_before_note: In case of doubt about the delivery date, the supplier may approach the order contact.
      edit_message: edit message
      submit_close: Close order
      submit_send: Close & send order to supplier
      title: Close %{name}
    index:
      last_order_week: Recent orders
    model:
      error_ends_before_pickup: must be after the end date (or remain empty)
      error_starts_before_pickup: must be after the start date (or remain empty)
    show:
      download:
        fax_csv: Order CSV
        fax_pdf: Order PDF
        fax_txt: Order text
  simple_form:
    hints:
      supplier:
        min_order_quantity: Minimum gross amount that needs to be ordered.
